name: CMake

on: [push]

env:
  BUILD_TYPE: Release
  VCPKG_SHA: '18ab4b72a26284f0df28295ce7bf9b21c96f20f4'
  VCPKG_DEFAULT_TRIPLET: 'x64-windows'                                          # recognized by vcpkg
  VCPKG_BINARY_SOURCES : 'clear;nuget,GitHub,readwrite;files,${{ github.workspace }}/vcpkg-cache,readwrite'  # recognized by vcpkg

jobs:
  build:
    runs-on: windows-latest

    steps:  
    - name: Cache Vcpkg binaries
      uses: actions/cache@v3
      with:
        path: vcpkg-cache
        key: vcpkg-bin-cache-dynamic-v1
        restore-keys: | 
          vcpkg-bin-cache-dynamic-v1
          vcpkg-bin-cache-dynamic
            
    - name: VCPKG Clone
      uses: actions/checkout@v2.3.2
      with:
        repository: 'microsoft/vcpkg'
        ref: ${{ env.VCPKG_SHA }}
        path: vcpkg
    
    - name: VCPKG Bootstrap
      shell: cmd
      working-directory: vcpkg
      run: 'bootstrap-vcpkg.bat'
    
    - name: 'Setup NuGet Credentials'
      shell: cmd
      working-directory: vcpkg
      run: >
        `vcpkg.exe fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/inviwo/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "inviwo"
        -password "${{ secrets.GITHUB_TOKEN }}"
    
    - name: VCPKG Install
      shell: cmd
      working-directory: vcpkg
      run: > 
        vcpkg.exe install 
        assimp benchmark cimg eigen3 fmt freetype glew glfw3 glm gtest 
        hdf5[cpp,zlib] libjpeg-turbo libpng minizip nlohmann-json 
        openexr pybind11 python3 tclap tiff tinydir tinyxml2 utfcpp zlib
   
    - name: Install Numpy
      shell: bash
      run: pip3 install numpy
   
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.0
        dir: ${{ github.workspace }}
       
    - name: Install NSIS
      run: |
        Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        scoop bucket add extras
        scoop install nsis doxygen
     
    - uses: actions/checkout@v2
      with: 
        path: inviwo
        submodules: recursive
        
    - name: Configure CMake
      shell: cmd
      run: >
        cmake.exe -S inviwo -B build 
        -DVCPKG_TARGET_TRIPLET='${{ env.VCPKG_DEFAULT_TRIPLET }}'
        -DCMAKE_TOOLCHAIN_FILE='${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake'
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        -DIVW_CFG_CMAKE_DEBUG=ON
        -DIVW_CFG_PRECOMPILED_HEADERS=OFF
        -DIVW_TEST_UNIT_TESTS_RUN_ON_BUILD=OFF
        -DIVW_TEST_BENCHMARKS=ON
        -DIVW_TEST_INTEGRATION_TESTS=ON
        -DIVW_USE_OPENMP=OFF
        -DIVW_USE_OPENEXR=OFF
        -DIVW_MODULE_CIMG=ON
        -DIVW_MODULE_HDF5=ON
        -DIVW_PACKAGE_INSTALLER=ON
        -DIVW_USE_EXTERNAL_ASSIMP=ON
        -DIVW_USE_EXTERNAL_BENCHMARK=ON
        -DIVW_USE_EXTERNAL_EIGEN=ON
        -DIVW_USE_EXTERNAL_FMT=ON
        -DIVW_USE_EXTERNAL_FREETYPE=ON
        -DIVW_USE_EXTERNAL_GLFW=ON
        -DIVW_USE_EXTERNAL_GLM=ON
        -DIVW_USE_EXTERNAL_GTEST=ON
        -DIVW_USE_EXTERNAL_HDF5=ON
        -DIVW_USE_EXTERNAL_IMG=ON
        -DIVW_USE_EXTERNAL_JSON=ON
        -DIVW_USE_EXTERNAL_CIMG=ON
        -DIVW_USE_EXTERNAL_GLEW=ON
        -DIVW_USE_EXTERNAL_TCLAP=ON
        -DIVW_USE_EXTERNAL_UTFCPP=ON
        -DIVW_USE_EXTERNAL_TINYDIR=ON
        -DIVW_USE_EXTERNAL_PYBIND11=ON
        -DIVW_USE_EXTERNAL_OPENEXR=ON
         
    #- name: Build
    #  working-directory: build
    #  shell: cmd
    #  run: cmake.exe --build . --config ${{ env.BUILD_TYPE }} --parallel --target PACKAGE 

    #- uses: actions/upload-artifact@v2
    #  with:
    #    name: inviwo-installer
    #    path: |
    #      build/inviwo-v*.zip
    #      build/inviwo-v*.exe


